{"version":3,"sources":["webpack:///./node_modules/core-js/modules/es7.object.entries.js","webpack:///./src/modules/contact/components/field/field.js","webpack:///./src/modules/contact/components/field/index.js","webpack:///./src/modules/contact/contact.js","webpack:///./src/modules/contact/index.js","webpack:///./src/modules/qualifications/project-refinement-context.js","webpack:///./src/components/badge/badge.js","webpack:///./src/components/badge/index.js","webpack:///./src/modules/qualifications/components/skills/components/skill-group/skill-group.js","webpack:///./src/modules/qualifications/components/skills/components/skill-group/index.js","webpack:///./src/modules/qualifications/components/skills/index.js","webpack:///./src/modules/qualifications/components/skills/skills.js","webpack:///./src/modules/qualifications/components/project-list/components/project/index.js","webpack:///./src/modules/qualifications/components/project-list/components/project/project.js","webpack:///./src/modules/qualifications/components/project-list/index.js","webpack:///./src/modules/qualifications/components/project-list/project-list.js","webpack:///./src/modules/qualifications/index.js","webpack:///./src/modules/qualifications/qualifications.js","webpack:///./src/templates/portfolio/portfolio.js","webpack:///./src/templates/portfolio/index.js","webpack:///./node_modules/core-js/modules/_object-to-array.js"],"names":["$export","$entries","S","entries","it","Field","className","children","defaultProps","Divider","Contact","data","name","image","headline","summary","email","github","src","href","ProjectRefinementContext","createContext","ProjectRefinementProvider","useState","selectedSkills","setSelectedSkills","isSkillSelected","skill","includes","Provider","value","toggleSkillSelection","filter","selectedSkill","unselectSkill","selectSkill","Badge","onClick","isHighlighted","border","fontWeight","idToTitleMapping","methodologies","SkillGroup","id","skills","useContext","title","skillList","sort","map","key","Skills","skillGroups","Object","Project","description","highlights","relevantSkills","company","role","Highlights","text","i","toString","RelevantSkills","ProjectList","refinedProjects","projects","length","some","relevantSkill","refineProjectsBySkills","project","flat","Projects","Qualifications","experience","Portfolio","pageContext","contact","qualifications","DESCRIPTORS","getKeys","toIObject","isEnum","f","module","exports","isEntries","O","keys","result","call","push"],"mappings":"gFACA,IAAIA,EAAU,EAAQ,QAClBC,EAAW,EAAQ,OAAR,EAA8B,GAE7CD,EAAQA,EAAQE,EAAG,SAAU,CAC3BC,QAAS,SAAiBC,GACxB,OAAOH,EAASG,O,kECHdC,G,oBAAQ,SAAC,GAA2B,IAA1BC,EAAyB,EAAzBA,UAAWC,EAAc,EAAdA,SAC1B,OACC,yBAAKD,UAAW,iCAAmCA,GACjDC,KAUJF,EAAMG,aAAe,CACpBF,UAAW,IAGGD,IClBAA,EDkBAA,EEfTI,EAAU,kBAAM,uBAAGH,UAAU,wBAAb,MCHPI,EDKC,SAAC,GAA6D,IAAD,IAA3DC,KAAOC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,MAAOC,EAAuC,EAAvCA,SAAUC,EAA6B,EAA7BA,QAASC,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,OAC/D,OACC,yBAAKX,UAAU,kCACd,yBAAKA,UAAU,qCACd,yBAAKY,IAAKL,EAAOP,UAAU,4BAE5B,yBAAKA,UAAU,yDACd,kBAAC,EAAD,CAAOA,UAAU,sBAAsBM,GACvC,kBAAC,EAAD,CAAON,UAAU,WAAWQ,GAC5B,kBAAC,EAAD,KAAQC,GACR,kBAAC,EAAD,CAAOT,UAAU,+CAChB,2BACC,uBAAGa,KAAM,UAAYH,EAAOV,UAAU,aACpCU,IAGH,kBAAC,EAAD,MACA,2BACC,uBAAGG,KAAM,sBAAwBF,EAAQX,UAAU,aAAnD,UACSW,Q,+aEvBf,IAAMG,EAA2BC,0BAEpBC,EAA4B,SAAC,GAAgB,IAAff,EAAc,EAAdA,SAAc,EACZgB,mBAAS,IAA9CC,EADiD,KACjCC,EADiC,KAGlDC,EAAkB,SAAAC,GAAK,OAAIH,EAAeI,SAASD,IAUzD,OACC,kBAACP,EAAyBS,SAA1B,CACCC,MAAO,CAACN,iBAAgBE,kBAAiBK,qBALd,SAAAJ,GAAK,OACjCD,EAAgBC,GANK,SAAAA,GAAK,OAC1BF,EACCD,EAAeQ,QAAO,SAAAC,GAAa,OAAIA,IAAkBN,MAIjCO,CAAcP,GAPpB,SAAAA,GAAK,OAAIF,EAAkB,GAAD,SAAKD,GAAL,CAAqBG,KAOlBQ,CAAYR,MAM1DpB,IASWa,IC5BTgB,G,8BAAQ,SAAC,GAAwC,IAAvC7B,EAAsC,EAAtCA,SAAU8B,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,cAE5BC,EAASD,EAAgB,eAAH,kBACtBE,EAAaF,EAAgB,YAAc,aAEjD,OACC,0BACChC,UACC,0HACoBiC,EADpB,IAC8BC,EAE/BH,QAASA,GAER9B,KAWJ6B,EAAM5B,aAAe,CACpB6B,QAAS,aACTC,eAAe,GAGDF,IC9BAA,ED8BAA,EE1BTK,EAAmB,CACxB,wBAAyB,YACzB,uBAAwB,uBACxB,kBAAmB,kBACnBC,cAAe,iBCRDC,EDWI,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,GAAIC,EAAY,EAAZA,OAAY,EACYC,qBAC/C1B,GADMW,EAD6B,EAC7BA,qBAAsBL,EADO,EACPA,gBAIvBqB,EAAQN,EAAiBG,GACzBI,EAAYH,EAAOI,OAAOC,KAAI,SAAAvB,GAGnC,OACC,kBAAC,EAAD,CACCwB,IAAKxB,EACLW,cAAeZ,EAAgBC,GAC/BU,QANkB,kBAAMN,EAAqBJ,KAQ5CA,MAKJ,OACC,yBAAKrB,UAAU,QACd,yBAAKA,UAAU,uCAAuCyC,GACtD,6BAAMC,KElCMI,ECGA,SAAC,GAAY,IAAXzC,EAAU,EAAVA,KAEV0C,EADoBC,OAAOnD,QAAQQ,GACHuC,KAAI,gBAAEC,EAAF,KAAON,EAAP,YACzC,yBAAKM,IAAKA,EAAK7C,UAAU,mBACxB,kBAAC,EAAD,CAAYsC,GAAIO,EAAKN,OAAQA,QAI/B,OACC,6BACC,yBAAKvC,UAAU,oDAAf,8CAGA,yBAAKA,UAAU,uBAAuB+C,KChB1BE,G,UCGC,SAAC,GASV,IAAD,IARL5C,KACCC,EAOI,EAPJA,KACA4C,EAMI,EANJA,YACAC,EAKI,EALJA,WACmBC,EAIf,EAJJ,mBACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,KAGKC,EAAaJ,EAAWP,KAAI,SAACY,EAAMC,GAAP,OACjC,wBAAIZ,IAAKY,EAAEC,YAAaF,MAEnBG,EAAiBP,EACrBT,OACAC,KAAI,SAAAvB,GAAK,OAAI,kBAAC,EAAD,CAAOwB,IAAKxB,GAAQA,MAEnC,OACC,yBAAKrB,UAAU,0BACd,2BAAOA,UAAU,mDAChB,2BAAOA,UAAU,sCAChB,4BACC,4CACA,+CACA,sCAGF,2BAAOA,UAAU,WAChB,4BACC,4BAAKM,GACL,4BAAK+C,GACL,4BAAKC,MAIR,yBAAKtD,UAAU,QAAQkD,GACvB,6BACC,wBAAIlD,UAAU,+CACZuD,IAGH,yBAAKvD,UAAU,QAAQ2D,MC5CXC,ECWK,SAAC,GAAY,IAAXvD,EAAU,EAAVA,KACda,EAAkBsB,qBAAW1B,GAA7BI,eAOD2C,EAfwB,SAACC,EAAUvB,GACzC,OAAsB,IAAlBA,EAAOwB,OAAqBD,EACzBA,EAASpC,QAAO,qBAAE,mBACTsC,MAAK,SAAAC,GAAa,OAAI1B,EAAOjB,SAAS2C,SAY9BC,CALP7D,EACfuC,KAAI,gBAAES,EAAF,EAAEA,QAASC,EAAX,EAAWA,KAAX,SAAiBQ,SACZlB,KAAI,SAAAuB,GAAO,wBAASA,EAAT,CAAkBd,UAASC,eAE/Cc,OACuDlD,GAEnDmD,EAAWR,EAAgBjB,KAAI,SAAAuB,GAAO,OAC3C,kBAAC,EAAD,CAAStB,IAAKsB,EAAQ7D,KAAMD,KAAM8D,OAGnC,OACC,6BACC,wBAAInE,UAAU,WAAd,sBAA4C6D,EAAgBE,OAA5D,KACA,yBAAK/D,UAAU,QAAQqE,KC5BXC,ECKQ,SAAC,GAAkC,IAAD,IAAhCjE,KAAOkC,EAAyB,EAAzBA,OAAQgC,EAAiB,EAAjBA,WACvC,OACC,kBAAC,EAAD,KACC,kBAAC,EAAD,CAAQlE,KAAMkC,IACd,kBAAC,EAAD,CAAalC,KAAMkE,MCoBPC,EAtBG,SAAC,GAIZ,IAAD,IAHLC,YACCpE,KAAOqE,EAEH,EAFGA,QAASC,EAEZ,EAFYA,eAGjB,OACC,yBAAK3E,UAAU,0BACd,kBAAC,EAAD,CAASK,KAAMqE,IACf,kBAAC,EAAD,CAAgBrE,KAAMsE,MCfVH,a,qBCFf,IAAII,EAAc,EAAQ,QACtBC,EAAU,EAAQ,QAClBC,EAAY,EAAQ,QACpBC,EAAS,EAAQ,QAAiBC,EACtCC,EAAOC,QAAU,SAAUC,GACzB,OAAO,SAAUrF,GAOf,IANA,IAKI+C,EALAuC,EAAIN,EAAUhF,GACduF,EAAOR,EAAQO,GACfrB,EAASsB,EAAKtB,OACdN,EAAI,EACJ6B,EAAS,GAENvB,EAASN,GACdZ,EAAMwC,EAAK5B,KACNmB,IAAeG,EAAOQ,KAAKH,EAAGvC,IACjCyC,EAAOE,KAAKL,EAAY,CAACtC,EAAKuC,EAAEvC,IAAQuC,EAAEvC,IAG9C,OAAOyC","file":"component---src-templates-portfolio-index-js-2e21e5a6d66d98061b14.js","sourcesContent":["// https://github.com/tc39/proposal-object-values-entries\nvar $export = require('./_export');\nvar $entries = require('./_object-to-array')(true);\n\n$export($export.S, 'Object', {\n  entries: function entries(it) {\n    return $entries(it);\n  }\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Field = ({className, children}) => {\n\treturn (\n\t\t<div className={'mb-1 text-center md:text-left ' + className}>\n\t\t\t{children}\n\t\t</div>\n\t);\n};\n\nField.propTypes = {\n\tclassName: PropTypes.string,\n\tchildren: PropTypes.isRequired,\n};\n\nField.defaultProps = {\n\tclassName: '',\n};\n\nexport default Field;\n","import Field from './field';\n\nexport default Field;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Field from './components/field';\n\nconst Divider = () => <p className=\"hidden md:block mx-4\">â€¢</p>;\n\nconst Contact = ({data: {name, image, headline, summary, email, github}}) => {\n\treturn (\n\t\t<div className=\"flex flex-col md:flex-row py-8\">\n\t\t\t<div className=\"flex flex-shrink-0 justify-center\">\n\t\t\t\t<img src={image} className=\"rounded-full w-48 h-48\" />\n\t\t\t</div>\n\t\t\t<div className=\"flex flex-col md:justify-center md:pl-8 text-gray-800\">\n\t\t\t\t<Field className=\"text-2xl font-bold\">{name}</Field>\n\t\t\t\t<Field className=\"text-lg\">{headline}</Field>\n\t\t\t\t<Field>{summary}</Field>\n\t\t\t\t<Field className=\"flex flex-col md:flex-row text-sm font-bold\">\n\t\t\t\t\t<p>\n\t\t\t\t\t\t<a href={'mailto:' + email} className=\"underline\">\n\t\t\t\t\t\t\t{email}\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</p>\n\t\t\t\t\t<Divider />\n\t\t\t\t\t<p>\n\t\t\t\t\t\t<a href={'https://github.com/' + github} className=\"underline\">\n\t\t\t\t\t\t\tgithub/{github}\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</p>\n\t\t\t\t</Field>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nContact.propTypes = {\n\tdata: PropTypes.object.isRequired,\n};\n\nexport default Contact;\n","import Contact from './contact';\n\nexport default Contact;\n","import React, {useState, createContext} from 'react';\nimport PropTypes from 'prop-types';\n\nconst ProjectRefinementContext = createContext();\n\nexport const ProjectRefinementProvider = ({children}) => {\n\tconst [selectedSkills, setSelectedSkills] = useState([]);\n\n\tconst isSkillSelected = skill => selectedSkills.includes(skill);\n\tconst selectSkill = skill => setSelectedSkills([...selectedSkills, skill]);\n\tconst unselectSkill = skill =>\n\t\tsetSelectedSkills(\n\t\t\tselectedSkills.filter(selectedSkill => selectedSkill !== skill)\n\t\t);\n\n\tconst toggleSkillSelection = skill =>\n\t\tisSkillSelected(skill) ? unselectSkill(skill) : selectSkill(skill);\n\n\treturn (\n\t\t<ProjectRefinementContext.Provider\n\t\t\tvalue={{selectedSkills, isSkillSelected, toggleSkillSelection}}\n\t\t>\n\t\t\t{children}\n\t\t</ProjectRefinementContext.Provider>\n\t);\n};\n\nProjectRefinementProvider.propTypes = {\n\tchildren: PropTypes.node.isRequired,\n};\n\nexport default ProjectRefinementContext;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Badge = ({children, onClick, isHighlighted}) => {\n\tconst badgeColor = 'gray-600';\n\tconst border = isHighlighted ? 'border-white' : `border-${badgeColor}`;\n\tconst fontWeight = isHighlighted ? 'font-bold' : 'font-light';\n\n\treturn (\n\t\t<span\n\t\t\tclassName={\n\t\t\t\t'inline-block text-white rounded-full mr-1 mt-1 px-1 leading-snug text-sm cursor-pointer shadow-md border-2 ' +\n\t\t\t\t`bg-${badgeColor} ${border} ${fontWeight}`\n\t\t\t}\n\t\t\tonClick={onClick}\n\t\t>\n\t\t\t{children}\n\t\t</span>\n\t);\n};\n\nBadge.propTypes = {\n\tchildren: PropTypes.node.isRequired,\n\tonClick: PropTypes.func,\n\tisHighlighted: PropTypes.bool,\n};\n\nBadge.defaultProps = {\n\tonClick: () => {},\n\tisHighlighted: false,\n};\n\nexport default Badge;\n","import Badge from './badge';\n\nexport default Badge;\n","import React, {useContext} from 'react';\nimport PropTypes from 'prop-types';\n\nimport ProjectRefinementContext from '../../../../project-refinement-context';\nimport Badge from '../../../../../../components/badge';\n\nconst idToTitleMapping = {\n\t'programming-languages': 'Languages',\n\t'libraries-frameworks': 'Libraries/Frameworks',\n\t'tools-platforms': 'Tools/Platforms',\n\tmethodologies: 'Methodologies',\n};\n\nconst SkillGroup = ({id, skills}) => {\n\tconst {toggleSkillSelection, isSkillSelected} = useContext(\n\t\tProjectRefinementContext\n\t);\n\n\tconst title = idToTitleMapping[id];\n\tconst skillList = skills.sort().map(skill => {\n\t\tconst selectSkill = () => toggleSkillSelection(skill);\n\n\t\treturn (\n\t\t\t<Badge\n\t\t\t\tkey={skill}\n\t\t\t\tisHighlighted={isSkillSelected(skill)}\n\t\t\t\tonClick={selectSkill}\n\t\t\t>\n\t\t\t\t{skill}\n\t\t\t</Badge>\n\t\t);\n\t});\n\n\treturn (\n\t\t<div className=\"py-2\">\n\t\t\t<div className=\"text-sm leading-tight text-gray-800\">{title}</div>\n\t\t\t<div>{skillList}</div>\n\t\t</div>\n\t);\n};\n\nSkillGroup.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tskills: PropTypes.array.isRequired,\n};\n\nexport default SkillGroup;\n","import SkillGroup from './skill-group';\n\nexport default SkillGroup;\n","import Skills from './skills';\n\nexport default Skills;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport SkillGroup from './components/skill-group';\n\nconst Skills = ({data}) => {\n\tconst skillGroupKVPairs = Object.entries(data);\n\tconst skillGroups = skillGroupKVPairs.map(([key, skills]) => (\n\t\t<div key={key} className=\"w-full md:w-1/2\">\n\t\t\t<SkillGroup id={key} skills={skills} />\n\t\t</div>\n\t));\n\n\treturn (\n\t\t<div>\n\t\t\t<div className=\"mb-4 text-center text-xs font-bold text-gray-800\">\n\t\t\t\tClick on skill to refine project portfolio\n\t\t\t</div>\n\t\t\t<div className=\"flex flex-wrap mb-2\">{skillGroups}</div>\n\t\t</div>\n\t);\n};\n\nSkills.propTypes = {\n\tdata: PropTypes.object.isRequired,\n};\n\nexport default Skills;\n","import Project from './project';\n\nexport default Project;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Badge from '../../../../../../components/badge';\n\nconst Project = ({\n\tdata: {\n\t\tname,\n\t\tdescription,\n\t\thighlights,\n\t\t'relevant-skills': relevantSkills,\n\t\tcompany,\n\t\trole,\n\t},\n}) => {\n\tconst Highlights = highlights.map((text, i) => (\n\t\t<li key={i.toString()}>{text}</li>\n\t));\n\tconst RelevantSkills = relevantSkills\n\t\t.sort()\n\t\t.map(skill => <Badge key={skill}>{skill}</Badge>);\n\n\treturn (\n\t\t<div className=\"max-w-full w-full card\">\n\t\t\t<table className=\"table-fixed max-w-full w-full leading-none mb-4\">\n\t\t\t\t<thead className=\"md:text-left text-xs text-gray-500\">\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>Project Name</th>\n\t\t\t\t\t\t<th>Employer/Client</th>\n\t\t\t\t\t\t<th>Role</th>\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody className=\"text-sm\">\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>{name}</td>\n\t\t\t\t\t\t<td>{company}</td>\n\t\t\t\t\t\t<td>{role}</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t\t<div className=\"mb-2\">{description}</div>\n\t\t\t<div>\n\t\t\t\t<ul className=\"list-disc list-inside leading-tight text-sm\">\n\t\t\t\t\t{Highlights}\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t\t<div className=\"mt-2\">{RelevantSkills}</div>\n\t\t</div>\n\t);\n};\n\nProject.propTypes = {\n\tdata: PropTypes.object.isRequired,\n};\n\nexport default Project;\n","import ProjectList from './project-list';\n\nexport default ProjectList;\n","import React, {useContext} from 'react';\nimport PropTypes from 'prop-types';\n\nimport ProjectRefinementContext from '../../project-refinement-context';\nimport Project from './components/project';\n\nconst refineProjectsBySkills = (projects, skills) => {\n\tif (skills.length === 0) return projects;\n\treturn projects.filter(({'relevant-skills': relevantSkills}) =>\n\t\trelevantSkills.some(relevantSkill => skills.includes(relevantSkill))\n\t);\n};\n\nconst ProjectList = ({data}) => {\n\tconst {selectedSkills} = useContext(ProjectRefinementContext);\n\n\tconst projects = data\n\t\t.map(({company, role, projects}) =>\n\t\t\tprojects.map(project => ({...project, company, role}))\n\t\t)\n\t\t.flat();\n\tconst refinedProjects = refineProjectsBySkills(projects, selectedSkills);\n\n\tconst Projects = refinedProjects.map(project => (\n\t\t<Project key={project.name} data={project} />\n\t));\n\n\treturn (\n\t\t<div>\n\t\t\t<h1 className=\"text-xl\">Project Portfolio ({refinedProjects.length})</h1>\n\t\t\t<div className=\"mt-2\">{Projects}</div>\n\t\t</div>\n\t);\n};\n\nProjectList.propTypes = {\n\tdata: PropTypes.array.isRequired,\n};\n\nexport default ProjectList;\n","import Qualifications from './qualifications';\n\nexport default Qualifications;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {ProjectRefinementProvider} from './project-refinement-context';\nimport Skills from './components/skills';\nimport ProjectList from './components/project-list';\n\nconst Qualifications = ({data: {skills, experience}}) => {\n\treturn (\n\t\t<ProjectRefinementProvider>\n\t\t\t<Skills data={skills} />\n\t\t\t<ProjectList data={experience} />\n\t\t</ProjectRefinementProvider>\n\t);\n};\n\nQualifications.propTypes = {\n\tdata: PropTypes.shape({\n\t\tskills: PropTypes.object.isRequired,\n\t\texperience: PropTypes.object.isRequired,\n\t}).isRequired,\n};\n\nexport default Qualifications;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// eslint-disable-next-line import/no-unassigned-import\nimport '../../styles/global.css';\n\nimport Contact from '../../modules/contact';\nimport Qualifications from '../../modules/qualifications';\n\nconst Portfolio = ({\n\tpageContext: {\n\t\tdata: {contact, qualifications},\n\t},\n}) => {\n\treturn (\n\t\t<div className=\"px-4 md:px-24 lg:px-48\">\n\t\t\t<Contact data={contact} />\n\t\t\t<Qualifications data={qualifications} />\n\t\t</div>\n\t);\n};\n\nPortfolio.propTypes = {\n\tpageContext: PropTypes.shape({\n\t\tdata: PropTypes.shape({\n\t\t\tcontact: PropTypes.object.isRequired,\n\t\t\tqualifications: PropTypes.object.isRequired,\n\t\t}).isRequired,\n\t}).isRequired,\n};\n\nexport default Portfolio;\n","import Portfolio from './portfolio';\n\nexport default Portfolio;\n","var DESCRIPTORS = require('./_descriptors');\nvar getKeys = require('./_object-keys');\nvar toIObject = require('./_to-iobject');\nvar isEnum = require('./_object-pie').f;\nmodule.exports = function (isEntries) {\n  return function (it) {\n    var O = toIObject(it);\n    var keys = getKeys(O);\n    var length = keys.length;\n    var i = 0;\n    var result = [];\n    var key;\n    while (length > i) {\n      key = keys[i++];\n      if (!DESCRIPTORS || isEnum.call(O, key)) {\n        result.push(isEntries ? [key, O[key]] : O[key]);\n      }\n    }\n    return result;\n  };\n};\n"],"sourceRoot":""}